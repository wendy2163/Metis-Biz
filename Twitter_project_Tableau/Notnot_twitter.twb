<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20213.21.0917.1006                               -->
<workbook source-build='2021.3.1 (20213.21.0917.1006)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='sample_notbot_tweet_id' inline='true' name='federated.09y0oj113usodm102ks0g1de6gjj' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='sample_notbot_tweet_id' name='textscan.0sijtui1tbnj5p16rvrrp06hbkhc'>
            <connection class='textscan' directory='C:/Users/wangz/metis/Business/Twitter_project' filename='sample_notbot_tweet_id.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0sijtui1tbnj5p16rvrrp06hbkhc' name='sample_notbot_tweet_id.csv' table='[sample_notbot_tweet_id#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='tweet_id' ordinal='0' />
            <column datatype='string' name='ticker_symbol' ordinal='1' />
            <column datatype='string' name='writer' ordinal='2' />
            <column datatype='string' name='body' ordinal='3' />
            <column datatype='integer' name='comment_num' ordinal='4' />
            <column datatype='integer' name='retweet_num' ordinal='5' />
            <column datatype='integer' name='like_num' ordinal='6' />
            <column datatype='datetime' name='date_x' ordinal='7' />
            <column datatype='integer' name='year' ordinal='8' />
            <column datatype='string' name='prep_body' ordinal='9' />
            <column datatype='real' name='positive_sentiment' ordinal='10' />
            <column datatype='real' name='negative_sentiment' ordinal='11' />
            <column datatype='real' name='total_sentiment' ordinal='12' />
            <column datatype='boolean' name='flag_potential_bot' ordinal='13' />
            <column datatype='date' name='day_j' ordinal='14' />
            <column datatype='date' name='date_j' ordinal='15' />
            <column datatype='date' name='day_date' ordinal='16' />
            <column datatype='real' name='close_value' ordinal='17' />
            <column datatype='integer' name='volume' ordinal='18' />
            <column datatype='real' name='open_value' ordinal='19' />
            <column datatype='real' name='high_value' ordinal='20' />
            <column datatype='real' name='low_value' ordinal='21' />
            <column datatype='date' name='date_y' ordinal='22' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0sijtui1tbnj5p16rvrrp06hbkhc' name='sample_notbot_tweet_id.csv' table='[sample_notbot_tweet_id#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='tweet_id' ordinal='0' />
            <column datatype='string' name='ticker_symbol' ordinal='1' />
            <column datatype='string' name='writer' ordinal='2' />
            <column datatype='string' name='body' ordinal='3' />
            <column datatype='integer' name='comment_num' ordinal='4' />
            <column datatype='integer' name='retweet_num' ordinal='5' />
            <column datatype='integer' name='like_num' ordinal='6' />
            <column datatype='datetime' name='date_x' ordinal='7' />
            <column datatype='integer' name='year' ordinal='8' />
            <column datatype='string' name='prep_body' ordinal='9' />
            <column datatype='real' name='positive_sentiment' ordinal='10' />
            <column datatype='real' name='negative_sentiment' ordinal='11' />
            <column datatype='real' name='total_sentiment' ordinal='12' />
            <column datatype='boolean' name='flag_potential_bot' ordinal='13' />
            <column datatype='date' name='day_j' ordinal='14' />
            <column datatype='date' name='date_j' ordinal='15' />
            <column datatype='date' name='day_date' ordinal='16' />
            <column datatype='real' name='close_value' ordinal='17' />
            <column datatype='integer' name='volume' ordinal='18' />
            <column datatype='real' name='open_value' ordinal='19' />
            <column datatype='real' name='high_value' ordinal='20' />
            <column datatype='real' name='low_value' ordinal='21' />
            <column datatype='date' name='date_y' ordinal='22' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[sample_notbot_tweet_id.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tweet_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[tweet_id]</local-name>
            <parent-name>[sample_notbot_tweet_id.csv]</parent-name>
            <remote-alias>tweet_id</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[sample_notbot_tweet_id.csv_5CF1F08359744AE08289B8C2149946D3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ticker_symbol</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ticker_symbol]</local-name>
            <parent-name>[sample_notbot_tweet_id.csv]</parent-name>
            <remote-alias>ticker_symbol</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[sample_notbot_tweet_id.csv_5CF1F08359744AE08289B8C2149946D3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>writer</remote-name>
            <remote-type>129</remote-type>
            <local-name>[writer]</local-name>
            <parent-name>[sample_notbot_tweet_id.csv]</parent-name>
            <remote-alias>writer</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[sample_notbot_tweet_id.csv_5CF1F08359744AE08289B8C2149946D3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>body</remote-name>
            <remote-type>129</remote-type>
            <local-name>[body]</local-name>
            <parent-name>[sample_notbot_tweet_id.csv]</parent-name>
            <remote-alias>body</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[sample_notbot_tweet_id.csv_5CF1F08359744AE08289B8C2149946D3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>comment_num</remote-name>
            <remote-type>20</remote-type>
            <local-name>[comment_num]</local-name>
            <parent-name>[sample_notbot_tweet_id.csv]</parent-name>
            <remote-alias>comment_num</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[sample_notbot_tweet_id.csv_5CF1F08359744AE08289B8C2149946D3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>retweet_num</remote-name>
            <remote-type>20</remote-type>
            <local-name>[retweet_num]</local-name>
            <parent-name>[sample_notbot_tweet_id.csv]</parent-name>
            <remote-alias>retweet_num</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[sample_notbot_tweet_id.csv_5CF1F08359744AE08289B8C2149946D3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>like_num</remote-name>
            <remote-type>20</remote-type>
            <local-name>[like_num]</local-name>
            <parent-name>[sample_notbot_tweet_id.csv]</parent-name>
            <remote-alias>like_num</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[sample_notbot_tweet_id.csv_5CF1F08359744AE08289B8C2149946D3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date_x</remote-name>
            <remote-type>135</remote-type>
            <local-name>[date_x]</local-name>
            <parent-name>[sample_notbot_tweet_id.csv]</parent-name>
            <remote-alias>date_x</remote-alias>
            <ordinal>7</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[sample_notbot_tweet_id.csv_5CF1F08359744AE08289B8C2149946D3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[sample_notbot_tweet_id.csv]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[sample_notbot_tweet_id.csv_5CF1F08359744AE08289B8C2149946D3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>prep_body</remote-name>
            <remote-type>129</remote-type>
            <local-name>[prep_body]</local-name>
            <parent-name>[sample_notbot_tweet_id.csv]</parent-name>
            <remote-alias>prep_body</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[sample_notbot_tweet_id.csv_5CF1F08359744AE08289B8C2149946D3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>positive_sentiment</remote-name>
            <remote-type>5</remote-type>
            <local-name>[positive_sentiment]</local-name>
            <parent-name>[sample_notbot_tweet_id.csv]</parent-name>
            <remote-alias>positive_sentiment</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[sample_notbot_tweet_id.csv_5CF1F08359744AE08289B8C2149946D3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>negative_sentiment</remote-name>
            <remote-type>5</remote-type>
            <local-name>[negative_sentiment]</local-name>
            <parent-name>[sample_notbot_tweet_id.csv]</parent-name>
            <remote-alias>negative_sentiment</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[sample_notbot_tweet_id.csv_5CF1F08359744AE08289B8C2149946D3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_sentiment</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_sentiment]</local-name>
            <parent-name>[sample_notbot_tweet_id.csv]</parent-name>
            <remote-alias>total_sentiment</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[sample_notbot_tweet_id.csv_5CF1F08359744AE08289B8C2149946D3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>flag_potential_bot</remote-name>
            <remote-type>11</remote-type>
            <local-name>[flag_potential_bot]</local-name>
            <parent-name>[sample_notbot_tweet_id.csv]</parent-name>
            <remote-alias>flag_potential_bot</remote-alias>
            <ordinal>13</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[sample_notbot_tweet_id.csv_5CF1F08359744AE08289B8C2149946D3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>day_j</remote-name>
            <remote-type>133</remote-type>
            <local-name>[day_j]</local-name>
            <parent-name>[sample_notbot_tweet_id.csv]</parent-name>
            <remote-alias>day_j</remote-alias>
            <ordinal>14</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[sample_notbot_tweet_id.csv_5CF1F08359744AE08289B8C2149946D3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date_j</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date_j]</local-name>
            <parent-name>[sample_notbot_tweet_id.csv]</parent-name>
            <remote-alias>date_j</remote-alias>
            <ordinal>15</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[sample_notbot_tweet_id.csv_5CF1F08359744AE08289B8C2149946D3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>day_date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[day_date]</local-name>
            <parent-name>[sample_notbot_tweet_id.csv]</parent-name>
            <remote-alias>day_date</remote-alias>
            <ordinal>16</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[sample_notbot_tweet_id.csv_5CF1F08359744AE08289B8C2149946D3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>close_value</remote-name>
            <remote-type>5</remote-type>
            <local-name>[close_value]</local-name>
            <parent-name>[sample_notbot_tweet_id.csv]</parent-name>
            <remote-alias>close_value</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[sample_notbot_tweet_id.csv_5CF1F08359744AE08289B8C2149946D3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>volume</remote-name>
            <remote-type>20</remote-type>
            <local-name>[volume]</local-name>
            <parent-name>[sample_notbot_tweet_id.csv]</parent-name>
            <remote-alias>volume</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[sample_notbot_tweet_id.csv_5CF1F08359744AE08289B8C2149946D3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>open_value</remote-name>
            <remote-type>5</remote-type>
            <local-name>[open_value]</local-name>
            <parent-name>[sample_notbot_tweet_id.csv]</parent-name>
            <remote-alias>open_value</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[sample_notbot_tweet_id.csv_5CF1F08359744AE08289B8C2149946D3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>high_value</remote-name>
            <remote-type>5</remote-type>
            <local-name>[high_value]</local-name>
            <parent-name>[sample_notbot_tweet_id.csv]</parent-name>
            <remote-alias>high_value</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[sample_notbot_tweet_id.csv_5CF1F08359744AE08289B8C2149946D3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>low_value</remote-name>
            <remote-type>5</remote-type>
            <local-name>[low_value]</local-name>
            <parent-name>[sample_notbot_tweet_id.csv]</parent-name>
            <remote-alias>low_value</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[sample_notbot_tweet_id.csv_5CF1F08359744AE08289B8C2149946D3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date_y</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date_y]</local-name>
            <parent-name>[sample_notbot_tweet_id.csv]</parent-name>
            <remote-alias>date_y</remote-alias>
            <ordinal>22</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[sample_notbot_tweet_id.csv_5CF1F08359744AE08289B8C2149946D3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column aggregation='Sum' caption='Retweet Num (copy)' datatype='integer' name='[Retweet Num (copy)_277252879539163136]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='[retweet_num]' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='sample_notbot_tweet_id.csv' datatype='table' name='[__tableau_internal_object_id__].[sample_notbot_tweet_id.csv_5CF1F08359744AE08289B8C2149946D3]' role='measure' type='quantitative' />
      <column caption='Body' datatype='string' name='[body]' role='dimension' type='nominal' />
      <column caption='Close Value' datatype='real' name='[close_value]' role='measure' type='quantitative' />
      <column caption='Comment Num' datatype='integer' name='[comment_num]' role='dimension' type='ordinal' />
      <column datatype='date' name='[date_j]' role='dimension' type='quantitative' />
      <column caption='Date X' datatype='datetime' name='[date_x]' role='dimension' type='ordinal' />
      <column caption='Date Y' datatype='date' name='[date_y]' role='dimension' type='ordinal' />
      <column caption='Day Date' datatype='date' name='[day_date]' role='dimension' type='ordinal' />
      <column caption='Day J' datatype='date' name='[day_j]' role='dimension' type='ordinal' />
      <column caption='Flag Potential Bot' datatype='boolean' name='[flag_potential_bot]' role='dimension' type='nominal' />
      <column caption='High Value' datatype='real' name='[high_value]' role='measure' type='quantitative' />
      <column caption='Like Num' datatype='integer' name='[like_num]' role='measure' type='quantitative' />
      <column caption='Low Value' datatype='real' name='[low_value]' role='measure' type='quantitative' />
      <column caption='Negative Sentiment' datatype='real' name='[negative_sentiment]' role='measure' type='quantitative' />
      <column caption='Open Value' datatype='real' name='[open_value]' role='measure' type='quantitative' />
      <column caption='Positive Sentiment' datatype='real' name='[positive_sentiment]' role='measure' type='quantitative' />
      <column caption='Prep Body' datatype='string' name='[prep_body]' role='dimension' type='nominal' />
      <column caption='Retweet Num' datatype='integer' name='[retweet_num]' role='measure' type='quantitative' />
      <column caption='Ticker Symbol' datatype='string' name='[ticker_symbol]' role='dimension' type='nominal' />
      <column caption='Total Sentiment' datatype='real' name='[total_sentiment]' role='measure' type='quantitative' />
      <column caption='Tweet Id' datatype='integer' name='[tweet_id]' role='dimension' type='ordinal' />
      <column caption='Volume' datatype='integer' name='[volume]' role='measure' type='quantitative' />
      <column caption='Writer' datatype='string' name='[writer]' role='dimension' type='nominal' />
      <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      <column-instance column='[close_value]' derivation='Avg' name='[avg:close_value:qk]' pivot='key' type='quantitative' />
      <column-instance column='[negative_sentiment]' derivation='Avg' name='[avg:negative_sentiment:qk]' pivot='key' type='quantitative' />
      <column-instance column='[positive_sentiment]' derivation='Avg' name='[avg:positive_sentiment:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_sentiment]' derivation='Avg' name='[avg:total_sentiment:qk]' pivot='key' type='quantitative' />
      <column-instance column='[close_value]' derivation='Median' name='[med:close_value:qk]' pivot='key' type='quantitative' />
      <column-instance column='[negative_sentiment]' derivation='Median' name='[med:negative_sentiment:qk]' pivot='key' type='quantitative' />
      <column-instance column='[positive_sentiment]' derivation='Median' name='[med:positive_sentiment:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ticker_symbol]' derivation='None' name='[none:ticker_symbol:nk]' pivot='key' type='nominal' />
      <column-instance column='[close_value]' derivation='Sum' name='[sum:close_value:qk]' pivot='key' type='quantitative' />
      <column-instance column='[negative_sentiment]' derivation='Sum' name='[sum:negative_sentiment:qk]' pivot='key' type='quantitative' />
      <column-instance column='[positive_sentiment]' derivation='Sum' name='[sum:positive_sentiment:qk]' pivot='key' type='quantitative' />
      <column-instance column='[retweet_num]' derivation='Sum' name='[sum:retweet_num:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_sentiment]' derivation='Sum' name='[sum:total_sentiment:qk]' pivot='key' type='quantitative' />
      <column-instance column='[volume]' derivation='Sum' name='[sum:volume:qk]' pivot='key' type='quantitative' />
      <column-instance column='[date_j]' derivation='Day-Trunc' name='[tdy:date_j:qk]' pivot='key' type='quantitative' />
      <group hidden='true' name='[Inclusions (DAY(date_j),Ticker Symbol)]' name-style='unqualified' user:auto-column='include'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[tdy:date_j:qk]' />
          <groupfilter function='level-members' level='[none:ticker_symbol:nk]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#59a14f'>
              <bucket>&quot;[federated.09y0oj113usodm102ks0g1de6gjj].[avg:negative_sentiment:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.09y0oj113usodm102ks0g1de6gjj].[avg:total_sentiment:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.09y0oj113usodm102ks0g1de6gjj].[med:negative_sentiment:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.09y0oj113usodm102ks0g1de6gjj].[med:positive_sentiment:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.09y0oj113usodm102ks0g1de6gjj].[sum:negative_sentiment:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.09y0oj113usodm102ks0g1de6gjj].[sum:positive_sentiment:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.09y0oj113usodm102ks0g1de6gjj].[sum:total_sentiment:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.09y0oj113usodm102ks0g1de6gjj].[avg:positive_sentiment:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.09y0oj113usodm102ks0g1de6gjj].[sum:volume:qk]:1&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.09y0oj113usodm102ks0g1de6gjj].[avg:close_value:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.09y0oj113usodm102ks0g1de6gjj].[sum:retweet_num:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.09y0oj113usodm102ks0g1de6gjj].[med:close_value:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.09y0oj113usodm102ks0g1de6gjj].[sum:close_value:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.09y0oj113usodm102ks0g1de6gjj].[sum:volume:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='sample_notbot_tweet_id.csv' id='sample_notbot_tweet_id.csv_5CF1F08359744AE08289B8C2149946D3'>
            <properties context=''>
              <relation connection='textscan.0sijtui1tbnj5p16rvrrp06hbkhc' name='sample_notbot_tweet_id.csv' table='[sample_notbot_tweet_id#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='tweet_id' ordinal='0' />
                  <column datatype='string' name='ticker_symbol' ordinal='1' />
                  <column datatype='string' name='writer' ordinal='2' />
                  <column datatype='string' name='body' ordinal='3' />
                  <column datatype='integer' name='comment_num' ordinal='4' />
                  <column datatype='integer' name='retweet_num' ordinal='5' />
                  <column datatype='integer' name='like_num' ordinal='6' />
                  <column datatype='datetime' name='date_x' ordinal='7' />
                  <column datatype='integer' name='year' ordinal='8' />
                  <column datatype='string' name='prep_body' ordinal='9' />
                  <column datatype='real' name='positive_sentiment' ordinal='10' />
                  <column datatype='real' name='negative_sentiment' ordinal='11' />
                  <column datatype='real' name='total_sentiment' ordinal='12' />
                  <column datatype='boolean' name='flag_potential_bot' ordinal='13' />
                  <column datatype='date' name='day_j' ordinal='14' />
                  <column datatype='date' name='date_j' ordinal='15' />
                  <column datatype='date' name='day_date' ordinal='16' />
                  <column datatype='real' name='close_value' ordinal='17' />
                  <column datatype='integer' name='volume' ordinal='18' />
                  <column datatype='real' name='open_value' ordinal='19' />
                  <column datatype='real' name='high_value' ordinal='20' />
                  <column datatype='real' name='low_value' ordinal='21' />
                  <column datatype='date' name='date_y' ordinal='22' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='+sentiment vs Close Value'>
      <table>
        <view>
          <datasources>
            <datasource caption='sample_notbot_tweet_id' name='federated.09y0oj113usodm102ks0g1de6gjj' />
          </datasources>
          <datasource-dependencies datasource='federated.09y0oj113usodm102ks0g1de6gjj'>
            <column-instance column='[close_value]' derivation='Avg' name='[avg:close_value:qk]' pivot='key' type='quantitative' />
            <column-instance column='[positive_sentiment]' derivation='Avg' name='[avg:positive_sentiment:qk]' pivot='key' type='quantitative' />
            <column caption='Close Value' datatype='real' name='[close_value]' role='measure' type='quantitative' />
            <column datatype='date' name='[date_j]' role='dimension' type='quantitative' />
            <column caption='Positive Sentiment' datatype='real' name='[positive_sentiment]' role='measure' type='quantitative' />
            <column-instance column='[date_j]' derivation='Month-Trunc' name='[tmn:date_j:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.09y0oj113usodm102ks0g1de6gjj].[avg:positive_sentiment:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.09y0oj113usodm102ks0g1de6gjj].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.09y0oj113usodm102ks0g1de6gjj].[avg:close_value:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.09y0oj113usodm102ks0g1de6gjj].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.09y0oj113usodm102ks0g1de6gjj].[avg:positive_sentiment:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.09y0oj113usodm102ks0g1de6gjj].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.09y0oj113usodm102ks0g1de6gjj].[avg:close_value:qk] + [federated.09y0oj113usodm102ks0g1de6gjj].[avg:positive_sentiment:qk])</rows>
        <cols>[federated.09y0oj113usodm102ks0g1de6gjj].[tmn:date_j:qk]</cols>
      </table>
      <simple-id uuid='{91001BC1-E44F-464E-8341-B45E15252D76}' />
    </worksheet>
    <worksheet name='-sentiment vs Close Value (2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='sample_notbot_tweet_id' name='federated.09y0oj113usodm102ks0g1de6gjj' />
          </datasources>
          <datasource-dependencies datasource='federated.09y0oj113usodm102ks0g1de6gjj'>
            <column-instance column='[close_value]' derivation='Avg' name='[avg:close_value:qk]' pivot='key' type='quantitative' />
            <column-instance column='[negative_sentiment]' derivation='Avg' name='[avg:negative_sentiment:qk]' pivot='key' type='quantitative' />
            <column caption='Close Value' datatype='real' name='[close_value]' role='measure' type='quantitative' />
            <column datatype='date' name='[date_j]' role='dimension' type='quantitative' />
            <column caption='Negative Sentiment' datatype='real' name='[negative_sentiment]' role='measure' type='quantitative' />
            <column-instance column='[date_j]' derivation='Month-Trunc' name='[tmn:date_j:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.09y0oj113usodm102ks0g1de6gjj].[avg:negative_sentiment:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.09y0oj113usodm102ks0g1de6gjj].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.09y0oj113usodm102ks0g1de6gjj].[avg:close_value:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.09y0oj113usodm102ks0g1de6gjj].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.09y0oj113usodm102ks0g1de6gjj].[avg:negative_sentiment:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.09y0oj113usodm102ks0g1de6gjj].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.09y0oj113usodm102ks0g1de6gjj].[avg:close_value:qk] + [federated.09y0oj113usodm102ks0g1de6gjj].[avg:negative_sentiment:qk])</rows>
        <cols>[federated.09y0oj113usodm102ks0g1de6gjj].[tmn:date_j:qk]</cols>
      </table>
      <simple-id uuid='{7FA06102-2CF5-4180-9734-AE0E3B3CE9F5}' />
    </worksheet>
    <worksheet name='Apple -sentiment vs Close Value (3)'>
      <table>
        <view>
          <datasources>
            <datasource caption='sample_notbot_tweet_id' name='federated.09y0oj113usodm102ks0g1de6gjj' />
          </datasources>
          <datasource-dependencies datasource='federated.09y0oj113usodm102ks0g1de6gjj'>
            <column-instance column='[close_value]' derivation='Avg' name='[avg:close_value:qk]' pivot='key' type='quantitative' />
            <column-instance column='[positive_sentiment]' derivation='Avg' name='[avg:positive_sentiment:qk]' pivot='key' type='quantitative' />
            <column caption='Close Value' datatype='real' name='[close_value]' role='measure' type='quantitative' />
            <column datatype='date' name='[date_j]' role='dimension' type='quantitative' />
            <column-instance column='[ticker_symbol]' derivation='None' name='[none:ticker_symbol:nk]' pivot='key' type='nominal' />
            <column caption='Positive Sentiment' datatype='real' name='[positive_sentiment]' role='measure' type='quantitative' />
            <column caption='Ticker Symbol' datatype='string' name='[ticker_symbol]' role='dimension' type='nominal' />
            <column-instance column='[date_j]' derivation='Month-Trunc' name='[tmn:date_j:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.09y0oj113usodm102ks0g1de6gjj].[none:ticker_symbol:nk]'>
            <groupfilter function='member' level='[none:ticker_symbol:nk]' member='&quot;AAPL&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.09y0oj113usodm102ks0g1de6gjj].[none:ticker_symbol:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.09y0oj113usodm102ks0g1de6gjj].[avg:positive_sentiment:qk]' field-type='quantitative' fold='true' max='0.35' min='0.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.09y0oj113usodm102ks0g1de6gjj].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.09y0oj113usodm102ks0g1de6gjj].[avg:close_value:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.09y0oj113usodm102ks0g1de6gjj].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-mode' value='line-ends' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.09y0oj113usodm102ks0g1de6gjj].[avg:positive_sentiment:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.09y0oj113usodm102ks0g1de6gjj].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.09y0oj113usodm102ks0g1de6gjj].[avg:close_value:qk] + [federated.09y0oj113usodm102ks0g1de6gjj].[avg:positive_sentiment:qk])</rows>
        <cols>[federated.09y0oj113usodm102ks0g1de6gjj].[tmn:date_j:qk]</cols>
      </table>
      <simple-id uuid='{C9071EFA-B43D-460C-8E36-A3B491B0E53E}' />
    </worksheet>
    <worksheet name='Daily Trade number'>
      <table>
        <view>
          <datasources>
            <datasource caption='sample_notbot_tweet_id' name='federated.09y0oj113usodm102ks0g1de6gjj' />
          </datasources>
          <datasource-dependencies datasource='federated.09y0oj113usodm102ks0g1de6gjj'>
            <column-instance column='[close_value]' derivation='Avg' name='[avg:close_value:qk]' pivot='key' type='quantitative' />
            <column caption='Close Value' datatype='real' name='[close_value]' role='measure' type='quantitative' />
            <column datatype='date' name='[date_j]' role='dimension' type='quantitative' />
            <column-instance column='[ticker_symbol]' derivation='None' name='[none:ticker_symbol:nk]' pivot='key' type='nominal' />
            <column-instance column='[volume]' derivation='Sum' name='[sum:volume:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date_j]' derivation='Day-Trunc' name='[tdy:date_j:qk]' pivot='key' type='quantitative' />
            <column caption='Ticker Symbol' datatype='string' name='[ticker_symbol]' role='dimension' type='nominal' />
            <column caption='Volume' datatype='integer' name='[volume]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.09y0oj113usodm102ks0g1de6gjj].[avg:close_value:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.09y0oj113usodm102ks0g1de6gjj].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.09y0oj113usodm102ks0g1de6gjj].[avg:close_value:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.09y0oj113usodm102ks0g1de6gjj].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.09y0oj113usodm102ks0g1de6gjj].[sum:volume:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.09y0oj113usodm102ks0g1de6gjj].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.09y0oj113usodm102ks0g1de6gjj].[none:ticker_symbol:nk] * ([federated.09y0oj113usodm102ks0g1de6gjj].[sum:volume:qk] + [federated.09y0oj113usodm102ks0g1de6gjj].[avg:close_value:qk]))</rows>
        <cols>[federated.09y0oj113usodm102ks0g1de6gjj].[tdy:date_j:qk]</cols>
      </table>
      <simple-id uuid='{324C02BE-C0A2-4C82-8BF9-7E177D036DBC}' />
    </worksheet>
    <worksheet name='Daily Trade number -Tesla'>
      <table>
        <view>
          <datasources>
            <datasource caption='sample_notbot_tweet_id' name='federated.09y0oj113usodm102ks0g1de6gjj' />
          </datasources>
          <datasource-dependencies datasource='federated.09y0oj113usodm102ks0g1de6gjj'>
            <column-instance column='[close_value]' derivation='Avg' name='[avg:close_value:qk]' pivot='key' type='quantitative' />
            <column caption='Close Value' datatype='real' name='[close_value]' role='measure' type='quantitative' />
            <column datatype='date' name='[date_j]' role='dimension' type='quantitative' />
            <column-instance column='[ticker_symbol]' derivation='None' name='[none:ticker_symbol:nk]' pivot='key' type='nominal' />
            <column-instance column='[volume]' derivation='Sum' name='[sum:volume:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date_j]' derivation='Day-Trunc' name='[tdy:date_j:qk]' pivot='key' type='quantitative' />
            <column caption='Ticker Symbol' datatype='string' name='[ticker_symbol]' role='dimension' type='nominal' />
            <column caption='Volume' datatype='integer' name='[volume]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.09y0oj113usodm102ks0g1de6gjj].[none:ticker_symbol:nk]'>
            <groupfilter function='member' level='[none:ticker_symbol:nk]' member='&quot;TSLA&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.09y0oj113usodm102ks0g1de6gjj].[none:ticker_symbol:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.09y0oj113usodm102ks0g1de6gjj].[avg:close_value:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.09y0oj113usodm102ks0g1de6gjj].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.09y0oj113usodm102ks0g1de6gjj].[avg:close_value:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.09y0oj113usodm102ks0g1de6gjj].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.09y0oj113usodm102ks0g1de6gjj].[sum:volume:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.09y0oj113usodm102ks0g1de6gjj].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.09y0oj113usodm102ks0g1de6gjj].[none:ticker_symbol:nk] * ([federated.09y0oj113usodm102ks0g1de6gjj].[sum:volume:qk] + [federated.09y0oj113usodm102ks0g1de6gjj].[avg:close_value:qk]))</rows>
        <cols>[federated.09y0oj113usodm102ks0g1de6gjj].[tdy:date_j:qk]</cols>
      </table>
      <simple-id uuid='{400C4BB8-2AE2-4752-9F4D-226DFEBABADC}' />
    </worksheet>
    <worksheet name='Daily Trade number -Tesla Oct'>
      <table>
        <view>
          <datasources>
            <datasource caption='sample_notbot_tweet_id' name='federated.09y0oj113usodm102ks0g1de6gjj' />
          </datasources>
          <datasource-dependencies datasource='federated.09y0oj113usodm102ks0g1de6gjj'>
            <column-instance column='[close_value]' derivation='Avg' name='[avg:close_value:qk]' pivot='key' type='quantitative' />
            <column caption='Close Value' datatype='real' name='[close_value]' role='measure' type='quantitative' />
            <column datatype='date' name='[date_j]' role='dimension' type='quantitative' />
            <column-instance column='[ticker_symbol]' derivation='None' name='[none:ticker_symbol:nk]' pivot='key' type='nominal' />
            <column-instance column='[volume]' derivation='Sum' name='[sum:volume:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date_j]' derivation='Day-Trunc' name='[tdy:date_j:qk]' pivot='key' type='quantitative' />
            <column caption='Ticker Symbol' datatype='string' name='[ticker_symbol]' role='dimension' type='nominal' />
            <column caption='Volume' datatype='integer' name='[volume]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.09y0oj113usodm102ks0g1de6gjj].[Inclusions (DAY(date_j),Ticker Symbol)]'>
            <groupfilter function='reorder-dimensionality' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:ticker_symbol:nk]' member='&quot;TSLA&quot;' />
                <groupfilter function='union'>
                  <groupfilter function='member' level='[tdy:date_j:qk]' member='#2019-10-01 00:00:00#' />
                  <groupfilter function='member' level='[tdy:date_j:qk]' member='#2019-10-02 00:00:00#' />
                  <groupfilter function='member' level='[tdy:date_j:qk]' member='#2019-10-09 00:00:00#' />
                  <groupfilter function='member' level='[tdy:date_j:qk]' member='#2019-10-10 00:00:00#' />
                  <groupfilter function='member' level='[tdy:date_j:qk]' member='#2019-10-11 00:00:00#' />
                  <groupfilter function='member' level='[tdy:date_j:qk]' member='#2019-10-13 00:00:00#' />
                  <groupfilter function='member' level='[tdy:date_j:qk]' member='#2019-10-14 00:00:00#' />
                  <groupfilter function='member' level='[tdy:date_j:qk]' member='#2019-10-15 00:00:00#' />
                  <groupfilter function='member' level='[tdy:date_j:qk]' member='#2019-10-16 00:00:00#' />
                  <groupfilter function='member' level='[tdy:date_j:qk]' member='#2019-10-17 00:00:00#' />
                  <groupfilter function='member' level='[tdy:date_j:qk]' member='#2019-10-20 00:00:00#' />
                  <groupfilter function='member' level='[tdy:date_j:qk]' member='#2019-10-21 00:00:00#' />
                  <groupfilter function='member' level='[tdy:date_j:qk]' member='#2019-10-22 00:00:00#' />
                  <groupfilter function='member' level='[tdy:date_j:qk]' member='#2019-10-23 00:00:00#' />
                  <groupfilter function='member' level='[tdy:date_j:qk]' member='#2019-10-24 00:00:00#' />
                  <groupfilter function='member' level='[tdy:date_j:qk]' member='#2019-10-25 00:00:00#' />
                  <groupfilter function='member' level='[tdy:date_j:qk]' member='#2019-10-26 00:00:00#' />
                  <groupfilter function='member' level='[tdy:date_j:qk]' member='#2019-10-27 00:00:00#' />
                  <groupfilter function='member' level='[tdy:date_j:qk]' member='#2019-10-28 00:00:00#' />
                  <groupfilter function='member' level='[tdy:date_j:qk]' member='#2019-10-29 00:00:00#' />
                  <groupfilter function='member' level='[tdy:date_j:qk]' member='#2019-10-30 00:00:00#' />
                  <groupfilter function='member' level='[tdy:date_j:qk]' member='#2019-10-31 00:00:00#' />
                  <groupfilter function='member' level='[tdy:date_j:qk]' member='#2019-11-01 00:00:00#' />
                  <groupfilter function='member' level='[tdy:date_j:qk]' member='#2019-11-03 00:00:00#' />
                  <groupfilter function='member' level='[tdy:date_j:qk]' member='#2019-11-04 00:00:00#' />
                  <groupfilter function='member' level='[tdy:date_j:qk]' member='#2019-11-05 00:00:00#' />
                  <groupfilter function='member' level='[tdy:date_j:qk]' member='#2019-11-06 00:00:00#' />
                  <groupfilter function='member' level='[tdy:date_j:qk]' member='#2019-11-07 00:00:00#' />
                  <groupfilter function='member' level='[tdy:date_j:qk]' member='#2019-11-08 00:00:00#' />
                  <groupfilter function='member' level='[tdy:date_j:qk]' member='#2019-11-09 00:00:00#' />
                  <groupfilter function='member' level='[tdy:date_j:qk]' member='#2019-11-11 00:00:00#' />
                </groupfilter>
              </groupfilter>
              <order>
                <hierarchy name='[tdy:date_j:qk]' />
                <hierarchy name='[none:ticker_symbol:nk]' />
              </order>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.09y0oj113usodm102ks0g1de6gjj].[none:ticker_symbol:nk]'>
            <groupfilter function='member' level='[none:ticker_symbol:nk]' member='&quot;TSLA&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.09y0oj113usodm102ks0g1de6gjj].[none:ticker_symbol:nk]</column>
            <column>[federated.09y0oj113usodm102ks0g1de6gjj].[Inclusions (DAY(date_j),Ticker Symbol)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.09y0oj113usodm102ks0g1de6gjj].[avg:close_value:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.09y0oj113usodm102ks0g1de6gjj].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.09y0oj113usodm102ks0g1de6gjj].[avg:close_value:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.09y0oj113usodm102ks0g1de6gjj].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.09y0oj113usodm102ks0g1de6gjj].[sum:volume:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.09y0oj113usodm102ks0g1de6gjj].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.09y0oj113usodm102ks0g1de6gjj].[none:ticker_symbol:nk] * ([federated.09y0oj113usodm102ks0g1de6gjj].[sum:volume:qk] + [federated.09y0oj113usodm102ks0g1de6gjj].[avg:close_value:qk]))</rows>
        <cols>[federated.09y0oj113usodm102ks0g1de6gjj].[tdy:date_j:qk]</cols>
      </table>
      <simple-id uuid='{028C6CBC-158A-4902-8342-6A3C545498E2}' />
    </worksheet>
    <worksheet name='Daily Trade number -Tesla Oct Impact'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Retweet and Sentiment</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='sample_notbot_tweet_id' name='federated.09y0oj113usodm102ks0g1de6gjj' />
          </datasources>
          <datasource-dependencies datasource='federated.09y0oj113usodm102ks0g1de6gjj'>
            <column-instance column='[close_value]' derivation='Avg' name='[avg:close_value:qk]' pivot='key' type='quantitative' />
            <column caption='Close Value' datatype='real' name='[close_value]' role='measure' type='quantitative' />
            <column datatype='date' name='[date_j]' role='dimension' type='quantitative' />
            <column-instance column='[ticker_symbol]' derivation='None' name='[none:ticker_symbol:nk]' pivot='key' type='nominal' />
            <column caption='Retweet Num' datatype='integer' name='[retweet_num]' role='measure' type='quantitative' />
            <column-instance column='[retweet_num]' derivation='Sum' name='[sum:retweet_num:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_sentiment]' derivation='Sum' name='[sum:total_sentiment:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date_j]' derivation='Day-Trunc' name='[tdy:date_j:qk]' pivot='key' type='quantitative' />
            <column caption='Ticker Symbol' datatype='string' name='[ticker_symbol]' role='dimension' type='nominal' />
            <column caption='Total Sentiment' datatype='real' name='[total_sentiment]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.09y0oj113usodm102ks0g1de6gjj].[Inclusions (DAY(date_j),Ticker Symbol)]'>
            <groupfilter function='reorder-dimensionality' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:ticker_symbol:nk]' member='&quot;TSLA&quot;' />
                <groupfilter function='union'>
                  <groupfilter function='member' level='[tdy:date_j:qk]' member='#2019-10-01 00:00:00#' />
                  <groupfilter function='member' level='[tdy:date_j:qk]' member='#2019-10-02 00:00:00#' />
                  <groupfilter function='member' level='[tdy:date_j:qk]' member='#2019-10-09 00:00:00#' />
                  <groupfilter function='member' level='[tdy:date_j:qk]' member='#2019-10-10 00:00:00#' />
                  <groupfilter function='member' level='[tdy:date_j:qk]' member='#2019-10-11 00:00:00#' />
                  <groupfilter function='member' level='[tdy:date_j:qk]' member='#2019-10-13 00:00:00#' />
                  <groupfilter function='member' level='[tdy:date_j:qk]' member='#2019-10-14 00:00:00#' />
                  <groupfilter function='member' level='[tdy:date_j:qk]' member='#2019-10-15 00:00:00#' />
                  <groupfilter function='member' level='[tdy:date_j:qk]' member='#2019-10-16 00:00:00#' />
                  <groupfilter function='member' level='[tdy:date_j:qk]' member='#2019-10-17 00:00:00#' />
                  <groupfilter function='member' level='[tdy:date_j:qk]' member='#2019-10-20 00:00:00#' />
                  <groupfilter function='member' level='[tdy:date_j:qk]' member='#2019-10-21 00:00:00#' />
                  <groupfilter function='member' level='[tdy:date_j:qk]' member='#2019-10-22 00:00:00#' />
                  <groupfilter function='member' level='[tdy:date_j:qk]' member='#2019-10-23 00:00:00#' />
                  <groupfilter function='member' level='[tdy:date_j:qk]' member='#2019-10-24 00:00:00#' />
                  <groupfilter function='member' level='[tdy:date_j:qk]' member='#2019-10-25 00:00:00#' />
                  <groupfilter function='member' level='[tdy:date_j:qk]' member='#2019-10-26 00:00:00#' />
                  <groupfilter function='member' level='[tdy:date_j:qk]' member='#2019-10-27 00:00:00#' />
                  <groupfilter function='member' level='[tdy:date_j:qk]' member='#2019-10-28 00:00:00#' />
                  <groupfilter function='member' level='[tdy:date_j:qk]' member='#2019-10-29 00:00:00#' />
                  <groupfilter function='member' level='[tdy:date_j:qk]' member='#2019-10-30 00:00:00#' />
                  <groupfilter function='member' level='[tdy:date_j:qk]' member='#2019-10-31 00:00:00#' />
                  <groupfilter function='member' level='[tdy:date_j:qk]' member='#2019-11-01 00:00:00#' />
                  <groupfilter function='member' level='[tdy:date_j:qk]' member='#2019-11-03 00:00:00#' />
                  <groupfilter function='member' level='[tdy:date_j:qk]' member='#2019-11-04 00:00:00#' />
                  <groupfilter function='member' level='[tdy:date_j:qk]' member='#2019-11-05 00:00:00#' />
                  <groupfilter function='member' level='[tdy:date_j:qk]' member='#2019-11-06 00:00:00#' />
                  <groupfilter function='member' level='[tdy:date_j:qk]' member='#2019-11-07 00:00:00#' />
                  <groupfilter function='member' level='[tdy:date_j:qk]' member='#2019-11-08 00:00:00#' />
                  <groupfilter function='member' level='[tdy:date_j:qk]' member='#2019-11-09 00:00:00#' />
                  <groupfilter function='member' level='[tdy:date_j:qk]' member='#2019-11-11 00:00:00#' />
                </groupfilter>
              </groupfilter>
              <order>
                <hierarchy name='[tdy:date_j:qk]' />
                <hierarchy name='[none:ticker_symbol:nk]' />
              </order>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.09y0oj113usodm102ks0g1de6gjj].[none:ticker_symbol:nk]'>
            <groupfilter function='member' level='[none:ticker_symbol:nk]' member='&quot;TSLA&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.09y0oj113usodm102ks0g1de6gjj].[none:ticker_symbol:nk]</column>
            <column>[federated.09y0oj113usodm102ks0g1de6gjj].[Inclusions (DAY(date_j),Ticker Symbol)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.09y0oj113usodm102ks0g1de6gjj].[sum:total_sentiment:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.09y0oj113usodm102ks0g1de6gjj].[:Measure Names]' />
              <lod column='[federated.09y0oj113usodm102ks0g1de6gjj].[avg:close_value:qk]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.09y0oj113usodm102ks0g1de6gjj].[sum:retweet_num:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.09y0oj113usodm102ks0g1de6gjj].[:Measure Names]' />
              <lod column='[federated.09y0oj113usodm102ks0g1de6gjj].[avg:close_value:qk]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.09y0oj113usodm102ks0g1de6gjj].[sum:total_sentiment:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.09y0oj113usodm102ks0g1de6gjj].[:Measure Names]' />
              <lod column='[federated.09y0oj113usodm102ks0g1de6gjj].[avg:close_value:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.09y0oj113usodm102ks0g1de6gjj].[none:ticker_symbol:nk] * ([federated.09y0oj113usodm102ks0g1de6gjj].[sum:retweet_num:qk] + [federated.09y0oj113usodm102ks0g1de6gjj].[sum:total_sentiment:qk]))</rows>
        <cols>[federated.09y0oj113usodm102ks0g1de6gjj].[tdy:date_j:qk]</cols>
      </table>
      <simple-id uuid='{B9838559-C0BB-4D96-A3D1-388D9B942683}' />
    </worksheet>
    <worksheet name='Daily Trade number -Tesla Oct Impact (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Retweet and Sentiment</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='sample_notbot_tweet_id' name='federated.09y0oj113usodm102ks0g1de6gjj' />
          </datasources>
          <datasource-dependencies datasource='federated.09y0oj113usodm102ks0g1de6gjj'>
            <column-instance column='[close_value]' derivation='Avg' name='[avg:close_value:qk]' pivot='key' type='quantitative' />
            <column caption='Close Value' datatype='real' name='[close_value]' role='measure' type='quantitative' />
            <column datatype='date' name='[date_j]' role='dimension' type='quantitative' />
            <column-instance column='[ticker_symbol]' derivation='None' name='[none:ticker_symbol:nk]' pivot='key' type='nominal' />
            <column caption='Retweet Num' datatype='integer' name='[retweet_num]' role='measure' type='quantitative' />
            <column-instance column='[retweet_num]' derivation='Sum' name='[sum:retweet_num:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_sentiment]' derivation='Sum' name='[sum:total_sentiment:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date_j]' derivation='Day-Trunc' name='[tdy:date_j:qk]' pivot='key' type='quantitative' />
            <column caption='Ticker Symbol' datatype='string' name='[ticker_symbol]' role='dimension' type='nominal' />
            <column caption='Total Sentiment' datatype='real' name='[total_sentiment]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.09y0oj113usodm102ks0g1de6gjj].[Inclusions (DAY(date_j),Ticker Symbol)]'>
            <groupfilter function='reorder-dimensionality' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:ticker_symbol:nk]' member='&quot;TSLA&quot;' />
                <groupfilter function='union'>
                  <groupfilter function='member' level='[tdy:date_j:qk]' member='#2019-10-01 00:00:00#' />
                  <groupfilter function='member' level='[tdy:date_j:qk]' member='#2019-10-02 00:00:00#' />
                  <groupfilter function='member' level='[tdy:date_j:qk]' member='#2019-10-09 00:00:00#' />
                  <groupfilter function='member' level='[tdy:date_j:qk]' member='#2019-10-10 00:00:00#' />
                  <groupfilter function='member' level='[tdy:date_j:qk]' member='#2019-10-11 00:00:00#' />
                  <groupfilter function='member' level='[tdy:date_j:qk]' member='#2019-10-13 00:00:00#' />
                  <groupfilter function='member' level='[tdy:date_j:qk]' member='#2019-10-14 00:00:00#' />
                  <groupfilter function='member' level='[tdy:date_j:qk]' member='#2019-10-15 00:00:00#' />
                  <groupfilter function='member' level='[tdy:date_j:qk]' member='#2019-10-16 00:00:00#' />
                  <groupfilter function='member' level='[tdy:date_j:qk]' member='#2019-10-17 00:00:00#' />
                  <groupfilter function='member' level='[tdy:date_j:qk]' member='#2019-10-20 00:00:00#' />
                  <groupfilter function='member' level='[tdy:date_j:qk]' member='#2019-10-21 00:00:00#' />
                  <groupfilter function='member' level='[tdy:date_j:qk]' member='#2019-10-22 00:00:00#' />
                  <groupfilter function='member' level='[tdy:date_j:qk]' member='#2019-10-23 00:00:00#' />
                  <groupfilter function='member' level='[tdy:date_j:qk]' member='#2019-10-24 00:00:00#' />
                  <groupfilter function='member' level='[tdy:date_j:qk]' member='#2019-10-25 00:00:00#' />
                  <groupfilter function='member' level='[tdy:date_j:qk]' member='#2019-10-26 00:00:00#' />
                  <groupfilter function='member' level='[tdy:date_j:qk]' member='#2019-10-27 00:00:00#' />
                  <groupfilter function='member' level='[tdy:date_j:qk]' member='#2019-10-28 00:00:00#' />
                  <groupfilter function='member' level='[tdy:date_j:qk]' member='#2019-10-29 00:00:00#' />
                  <groupfilter function='member' level='[tdy:date_j:qk]' member='#2019-10-30 00:00:00#' />
                  <groupfilter function='member' level='[tdy:date_j:qk]' member='#2019-10-31 00:00:00#' />
                  <groupfilter function='member' level='[tdy:date_j:qk]' member='#2019-11-01 00:00:00#' />
                  <groupfilter function='member' level='[tdy:date_j:qk]' member='#2019-11-03 00:00:00#' />
                  <groupfilter function='member' level='[tdy:date_j:qk]' member='#2019-11-04 00:00:00#' />
                  <groupfilter function='member' level='[tdy:date_j:qk]' member='#2019-11-05 00:00:00#' />
                  <groupfilter function='member' level='[tdy:date_j:qk]' member='#2019-11-06 00:00:00#' />
                  <groupfilter function='member' level='[tdy:date_j:qk]' member='#2019-11-07 00:00:00#' />
                  <groupfilter function='member' level='[tdy:date_j:qk]' member='#2019-11-08 00:00:00#' />
                  <groupfilter function='member' level='[tdy:date_j:qk]' member='#2019-11-09 00:00:00#' />
                  <groupfilter function='member' level='[tdy:date_j:qk]' member='#2019-11-11 00:00:00#' />
                </groupfilter>
              </groupfilter>
              <order>
                <hierarchy name='[tdy:date_j:qk]' />
                <hierarchy name='[none:ticker_symbol:nk]' />
              </order>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.09y0oj113usodm102ks0g1de6gjj].[none:ticker_symbol:nk]'>
            <groupfilter function='member' level='[none:ticker_symbol:nk]' member='&quot;TSLA&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.09y0oj113usodm102ks0g1de6gjj].[none:ticker_symbol:nk]</column>
            <column>[federated.09y0oj113usodm102ks0g1de6gjj].[Inclusions (DAY(date_j),Ticker Symbol)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.09y0oj113usodm102ks0g1de6gjj].[sum:total_sentiment:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.09y0oj113usodm102ks0g1de6gjj].[:Measure Names]' />
              <lod column='[federated.09y0oj113usodm102ks0g1de6gjj].[avg:close_value:qk]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.09y0oj113usodm102ks0g1de6gjj].[sum:retweet_num:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.09y0oj113usodm102ks0g1de6gjj].[:Measure Names]' />
              <lod column='[federated.09y0oj113usodm102ks0g1de6gjj].[avg:close_value:qk]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.09y0oj113usodm102ks0g1de6gjj].[sum:total_sentiment:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.09y0oj113usodm102ks0g1de6gjj].[:Measure Names]' />
              <lod column='[federated.09y0oj113usodm102ks0g1de6gjj].[avg:close_value:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.09y0oj113usodm102ks0g1de6gjj].[none:ticker_symbol:nk] * ([federated.09y0oj113usodm102ks0g1de6gjj].[sum:retweet_num:qk] + [federated.09y0oj113usodm102ks0g1de6gjj].[sum:total_sentiment:qk]))</rows>
        <cols>[federated.09y0oj113usodm102ks0g1de6gjj].[tdy:date_j:qk]</cols>
      </table>
      <simple-id uuid='{B1909D8B-D3EB-4816-8870-B3EB990CB19C}' />
    </worksheet>
    <worksheet name='Daily Trade number -Tesla Oct Impact (3)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Retweet and Sentiment</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='sample_notbot_tweet_id' name='federated.09y0oj113usodm102ks0g1de6gjj' />
          </datasources>
          <datasource-dependencies datasource='federated.09y0oj113usodm102ks0g1de6gjj'>
            <column-instance column='[close_value]' derivation='Avg' name='[avg:close_value:qk]' pivot='key' type='quantitative' />
            <column caption='Close Value' datatype='real' name='[close_value]' role='measure' type='quantitative' />
            <column datatype='date' name='[date_j]' role='dimension' type='quantitative' />
            <column-instance column='[ticker_symbol]' derivation='None' name='[none:ticker_symbol:nk]' pivot='key' type='nominal' />
            <column caption='Retweet Num' datatype='integer' name='[retweet_num]' role='measure' type='quantitative' />
            <column-instance column='[retweet_num]' derivation='Sum' name='[sum:retweet_num:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_sentiment]' derivation='Sum' name='[sum:total_sentiment:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date_j]' derivation='Day-Trunc' name='[tdy:date_j:qk]' pivot='key' type='quantitative' />
            <column caption='Ticker Symbol' datatype='string' name='[ticker_symbol]' role='dimension' type='nominal' />
            <column caption='Total Sentiment' datatype='real' name='[total_sentiment]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.09y0oj113usodm102ks0g1de6gjj].[Inclusions (DAY(date_j),Ticker Symbol)]'>
            <groupfilter function='reorder-dimensionality' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:ticker_symbol:nk]' member='&quot;TSLA&quot;' />
                <groupfilter function='union'>
                  <groupfilter function='member' level='[tdy:date_j:qk]' member='#2019-10-01 00:00:00#' />
                  <groupfilter function='member' level='[tdy:date_j:qk]' member='#2019-10-02 00:00:00#' />
                  <groupfilter function='member' level='[tdy:date_j:qk]' member='#2019-10-09 00:00:00#' />
                  <groupfilter function='member' level='[tdy:date_j:qk]' member='#2019-10-10 00:00:00#' />
                  <groupfilter function='member' level='[tdy:date_j:qk]' member='#2019-10-11 00:00:00#' />
                  <groupfilter function='member' level='[tdy:date_j:qk]' member='#2019-10-13 00:00:00#' />
                  <groupfilter function='member' level='[tdy:date_j:qk]' member='#2019-10-14 00:00:00#' />
                  <groupfilter function='member' level='[tdy:date_j:qk]' member='#2019-10-15 00:00:00#' />
                  <groupfilter function='member' level='[tdy:date_j:qk]' member='#2019-10-16 00:00:00#' />
                  <groupfilter function='member' level='[tdy:date_j:qk]' member='#2019-10-17 00:00:00#' />
                  <groupfilter function='member' level='[tdy:date_j:qk]' member='#2019-10-20 00:00:00#' />
                  <groupfilter function='member' level='[tdy:date_j:qk]' member='#2019-10-21 00:00:00#' />
                  <groupfilter function='member' level='[tdy:date_j:qk]' member='#2019-10-22 00:00:00#' />
                  <groupfilter function='member' level='[tdy:date_j:qk]' member='#2019-10-23 00:00:00#' />
                  <groupfilter function='member' level='[tdy:date_j:qk]' member='#2019-10-24 00:00:00#' />
                  <groupfilter function='member' level='[tdy:date_j:qk]' member='#2019-10-25 00:00:00#' />
                  <groupfilter function='member' level='[tdy:date_j:qk]' member='#2019-10-26 00:00:00#' />
                  <groupfilter function='member' level='[tdy:date_j:qk]' member='#2019-10-27 00:00:00#' />
                  <groupfilter function='member' level='[tdy:date_j:qk]' member='#2019-10-28 00:00:00#' />
                  <groupfilter function='member' level='[tdy:date_j:qk]' member='#2019-10-29 00:00:00#' />
                  <groupfilter function='member' level='[tdy:date_j:qk]' member='#2019-10-30 00:00:00#' />
                  <groupfilter function='member' level='[tdy:date_j:qk]' member='#2019-10-31 00:00:00#' />
                  <groupfilter function='member' level='[tdy:date_j:qk]' member='#2019-11-01 00:00:00#' />
                  <groupfilter function='member' level='[tdy:date_j:qk]' member='#2019-11-03 00:00:00#' />
                  <groupfilter function='member' level='[tdy:date_j:qk]' member='#2019-11-04 00:00:00#' />
                  <groupfilter function='member' level='[tdy:date_j:qk]' member='#2019-11-05 00:00:00#' />
                  <groupfilter function='member' level='[tdy:date_j:qk]' member='#2019-11-06 00:00:00#' />
                  <groupfilter function='member' level='[tdy:date_j:qk]' member='#2019-11-07 00:00:00#' />
                  <groupfilter function='member' level='[tdy:date_j:qk]' member='#2019-11-08 00:00:00#' />
                  <groupfilter function='member' level='[tdy:date_j:qk]' member='#2019-11-09 00:00:00#' />
                  <groupfilter function='member' level='[tdy:date_j:qk]' member='#2019-11-11 00:00:00#' />
                </groupfilter>
              </groupfilter>
              <order>
                <hierarchy name='[tdy:date_j:qk]' />
                <hierarchy name='[none:ticker_symbol:nk]' />
              </order>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.09y0oj113usodm102ks0g1de6gjj].[none:ticker_symbol:nk]'>
            <groupfilter function='member' level='[none:ticker_symbol:nk]' member='&quot;TSLA&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.09y0oj113usodm102ks0g1de6gjj].[none:ticker_symbol:nk]</column>
            <column>[federated.09y0oj113usodm102ks0g1de6gjj].[Inclusions (DAY(date_j),Ticker Symbol)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.09y0oj113usodm102ks0g1de6gjj].[sum:total_sentiment:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.09y0oj113usodm102ks0g1de6gjj].[:Measure Names]' />
              <lod column='[federated.09y0oj113usodm102ks0g1de6gjj].[avg:close_value:qk]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.09y0oj113usodm102ks0g1de6gjj].[sum:retweet_num:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.09y0oj113usodm102ks0g1de6gjj].[:Measure Names]' />
              <lod column='[federated.09y0oj113usodm102ks0g1de6gjj].[avg:close_value:qk]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.09y0oj113usodm102ks0g1de6gjj].[sum:total_sentiment:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.09y0oj113usodm102ks0g1de6gjj].[:Measure Names]' />
              <lod column='[federated.09y0oj113usodm102ks0g1de6gjj].[avg:close_value:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.09y0oj113usodm102ks0g1de6gjj].[none:ticker_symbol:nk] * ([federated.09y0oj113usodm102ks0g1de6gjj].[sum:retweet_num:qk] + [federated.09y0oj113usodm102ks0g1de6gjj].[sum:total_sentiment:qk]))</rows>
        <cols>[federated.09y0oj113usodm102ks0g1de6gjj].[tdy:date_j:qk]</cols>
      </table>
      <simple-id uuid='{3E0834C6-B0B1-4016-AAD4-0CA99DB6971B}' />
    </worksheet>
    <worksheet name='Retweet Distribution'>
      <table>
        <view>
          <datasources>
            <datasource caption='sample_notbot_tweet_id' name='federated.09y0oj113usodm102ks0g1de6gjj' />
          </datasources>
          <datasource-dependencies datasource='federated.09y0oj113usodm102ks0g1de6gjj'>
            <column aggregation='Sum' caption='Retweet Num (copy)' datatype='integer' name='[Retweet Num (copy)_277252879539163136]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='[retweet_num]' />
            </column>
            <column-instance column='[Retweet Num (copy)_277252879539163136]' derivation='None' name='[none:Retweet Num (copy)_277252879539163136:ok]' pivot='key' type='ordinal' />
            <column caption='Retweet Num' datatype='integer' name='[retweet_num]' role='measure' type='quantitative' />
            <column-instance column='[retweet_num]' derivation='Sum' name='[sum:retweet_num:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='false' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <lod column='[federated.09y0oj113usodm102ks0g1de6gjj].[none:Retweet Num (copy)_277252879539163136:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#72b966' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.09y0oj113usodm102ks0g1de6gjj].[sum:retweet_num:qk]</rows>
        <cols>[federated.09y0oj113usodm102ks0g1de6gjj].[none:Retweet Num (copy)_277252879539163136:ok]</cols>
      </table>
      <simple-id uuid='{F3F8555D-DE48-4A5E-B2A5-D51E530AC65A}' />
    </worksheet>
    <worksheet name='Telsa -sentiment vs Close Value (2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='sample_notbot_tweet_id' name='federated.09y0oj113usodm102ks0g1de6gjj' />
          </datasources>
          <datasource-dependencies datasource='federated.09y0oj113usodm102ks0g1de6gjj'>
            <column-instance column='[close_value]' derivation='Avg' name='[avg:close_value:qk]' pivot='key' type='quantitative' />
            <column-instance column='[positive_sentiment]' derivation='Avg' name='[avg:positive_sentiment:qk]' pivot='key' type='quantitative' />
            <column caption='Close Value' datatype='real' name='[close_value]' role='measure' type='quantitative' />
            <column datatype='date' name='[date_j]' role='dimension' type='quantitative' />
            <column-instance column='[ticker_symbol]' derivation='None' name='[none:ticker_symbol:nk]' pivot='key' type='nominal' />
            <column caption='Positive Sentiment' datatype='real' name='[positive_sentiment]' role='measure' type='quantitative' />
            <column caption='Ticker Symbol' datatype='string' name='[ticker_symbol]' role='dimension' type='nominal' />
            <column-instance column='[date_j]' derivation='Month-Trunc' name='[tmn:date_j:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.09y0oj113usodm102ks0g1de6gjj].[none:ticker_symbol:nk]'>
            <groupfilter function='member' level='[none:ticker_symbol:nk]' member='&quot;TSLA&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.09y0oj113usodm102ks0g1de6gjj].[none:ticker_symbol:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.09y0oj113usodm102ks0g1de6gjj].[avg:positive_sentiment:qk]' field-type='quantitative' fold='true' max='0.18' min='0.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.09y0oj113usodm102ks0g1de6gjj].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.09y0oj113usodm102ks0g1de6gjj].[avg:close_value:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.09y0oj113usodm102ks0g1de6gjj].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.09y0oj113usodm102ks0g1de6gjj].[avg:positive_sentiment:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.09y0oj113usodm102ks0g1de6gjj].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.09y0oj113usodm102ks0g1de6gjj].[avg:close_value:qk] + [federated.09y0oj113usodm102ks0g1de6gjj].[avg:positive_sentiment:qk])</rows>
        <cols>[federated.09y0oj113usodm102ks0g1de6gjj].[tmn:date_j:qk]</cols>
      </table>
      <simple-id uuid='{4BA80E27-8FD4-4FDB-BD6A-8B1ED8BFD638}' />
    </worksheet>
    <worksheet name='Total Sentiment - Stock'>
      <table>
        <view>
          <datasources>
            <datasource caption='sample_notbot_tweet_id' name='federated.09y0oj113usodm102ks0g1de6gjj' />
          </datasources>
          <datasource-dependencies datasource='federated.09y0oj113usodm102ks0g1de6gjj'>
            <column-instance column='[total_sentiment]' derivation='Avg' name='[avg:total_sentiment:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ticker_symbol]' derivation='None' name='[none:ticker_symbol:nk]' pivot='key' type='nominal' />
            <column caption='Ticker Symbol' datatype='string' name='[ticker_symbol]' role='dimension' type='nominal' />
            <column caption='Total Sentiment' datatype='real' name='[total_sentiment]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.09y0oj113usodm102ks0g1de6gjj].[none:ticker_symbol:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;GOOG&quot;</bucket>
              <bucket>&quot;TSLA&quot;</bucket>
              <bucket>&quot;AAPL&quot;</bucket>
              <bucket>&quot;MSFT&quot;</bucket>
              <bucket>&quot;AMZN&quot;</bucket>
              <bucket>&quot;GOOGL&quot;</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.09y0oj113usodm102ks0g1de6gjj].[avg:total_sentiment:qk]' field-type='quantitative' max='0.45' min='0.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#72b966' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.09y0oj113usodm102ks0g1de6gjj].[avg:total_sentiment:qk]</rows>
        <cols>[federated.09y0oj113usodm102ks0g1de6gjj].[none:ticker_symbol:nk]</cols>
      </table>
      <simple-id uuid='{DF100E0A-7048-44B6-8DB5-80CE66A63CBF}' />
    </worksheet>
    <worksheet name='mft -sentiment vs Close Value (4)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>MSFT</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='sample_notbot_tweet_id' name='federated.09y0oj113usodm102ks0g1de6gjj' />
          </datasources>
          <datasource-dependencies datasource='federated.09y0oj113usodm102ks0g1de6gjj'>
            <column-instance column='[close_value]' derivation='Avg' name='[avg:close_value:qk]' pivot='key' type='quantitative' />
            <column-instance column='[positive_sentiment]' derivation='Avg' name='[avg:positive_sentiment:qk]' pivot='key' type='quantitative' />
            <column caption='Close Value' datatype='real' name='[close_value]' role='measure' type='quantitative' />
            <column datatype='date' name='[date_j]' role='dimension' type='quantitative' />
            <column-instance column='[ticker_symbol]' derivation='None' name='[none:ticker_symbol:nk]' pivot='key' type='nominal' />
            <column caption='Positive Sentiment' datatype='real' name='[positive_sentiment]' role='measure' type='quantitative' />
            <column caption='Ticker Symbol' datatype='string' name='[ticker_symbol]' role='dimension' type='nominal' />
            <column-instance column='[date_j]' derivation='Month-Trunc' name='[tmn:date_j:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.09y0oj113usodm102ks0g1de6gjj].[none:ticker_symbol:nk]'>
            <groupfilter function='member' level='[none:ticker_symbol:nk]' member='&quot;MSFT&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.09y0oj113usodm102ks0g1de6gjj].[none:ticker_symbol:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.09y0oj113usodm102ks0g1de6gjj].[avg:positive_sentiment:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.09y0oj113usodm102ks0g1de6gjj].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.09y0oj113usodm102ks0g1de6gjj].[avg:close_value:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.09y0oj113usodm102ks0g1de6gjj].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-mode' value='line-ends' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.09y0oj113usodm102ks0g1de6gjj].[avg:positive_sentiment:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.09y0oj113usodm102ks0g1de6gjj].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.09y0oj113usodm102ks0g1de6gjj].[avg:close_value:qk] + [federated.09y0oj113usodm102ks0g1de6gjj].[avg:positive_sentiment:qk])</rows>
        <cols>[federated.09y0oj113usodm102ks0g1de6gjj].[tmn:date_j:qk]</cols>
      </table>
      <simple-id uuid='{915B0266-2535-4E62-B253-53FA55FF0F7C}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='8' param='horz' type-v2='layout-flow' w='49200' x='50000' y='1000'>
            <zone h='98000' id='6' type-v2='layout-basic' w='33200' x='50000' y='1000'>
              <zone h='49000' id='3' name='Retweet Distribution' w='33200' x='50000' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='5' name='Telsa -sentiment vs Close Value (2)' w='33200' x='50000' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98000' id='7' is-fixed='true' param='vert' type-v2='layout-flow' w='16000' x='83200' y='1000'>
              <zone h='10500' id='9' name='Telsa -sentiment vs Close Value (2)' pane-specification-id='1' param='[federated.09y0oj113usodm102ks0g1de6gjj].[:Measure Names]' type-v2='color' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone h='49000' id='10' name='Daily Trade number' w='49200' x='800' y='1000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='49000' id='11' name='Total Sentiment - Stock' w='49200' x='800' y='50000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1250' minheight='1250' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='13' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='12' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='49000' id='10' is-fixed='true' name='Daily Trade number' w='49200' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='5' is-fixed='true' name='Telsa -sentiment vs Close Value (2)' w='33200' x='50000' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='10500' id='9' name='Telsa -sentiment vs Close Value (2)' pane-specification-id='1' param='[federated.09y0oj113usodm102ks0g1de6gjj].[:Measure Names]' type-v2='color' w='16000' x='83200' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='11' is-fixed='true' name='Total Sentiment - Stock' w='49200' x='800' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='3' is-fixed='true' name='Retweet Distribution' w='33200' x='50000' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{B30B6200-7B73-472F-A727-E6CB98521303}' />
    </dashboard>
  </dashboards>
  <windows source-height='44'>
    <window class='worksheet' name='Daily Trade number'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.09y0oj113usodm102ks0g1de6gjj].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{EEBEC739-57D1-4D45-B1A0-A41A14DA2389}' />
    </window>
    <window class='worksheet' name='Daily Trade number -Tesla'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.09y0oj113usodm102ks0g1de6gjj].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{FD81321D-DE03-4645-85F0-D1AD88B3020B}' />
    </window>
    <window class='worksheet' name='Daily Trade number -Tesla Oct'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.09y0oj113usodm102ks0g1de6gjj].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{678C32A5-0A35-4690-8D82-D2B717DF0565}' />
    </window>
    <window class='worksheet' name='Daily Trade number -Tesla Oct Impact'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.09y0oj113usodm102ks0g1de6gjj].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{638D560A-BFD1-49B2-8D27-9B110AE37F5F}' />
    </window>
    <window class='worksheet' name='Daily Trade number -Tesla Oct Impact (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.09y0oj113usodm102ks0g1de6gjj].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{D7EE3982-9E41-481F-9D4B-FB2586CF1A76}' />
    </window>
    <window class='worksheet' name='Daily Trade number -Tesla Oct Impact (3)'>
      <cards>
        <edge name='left'>
          <strip size='240'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='48'>
            <card type='columns' />
          </strip>
          <strip size='48'>
            <card type='rows' />
          </strip>
          <strip size='45'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='240'>
            <card pane-specification-id='1' param='[federated.09y0oj113usodm102ks0g1de6gjj].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{E6D962BB-8A24-4444-9EEC-1379DEFC7550}' />
    </window>
    <window class='worksheet' name='+sentiment vs Close Value'>
      <cards>
        <edge name='left'>
          <strip size='240'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='46'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='277'>
            <card pane-specification-id='1' param='[federated.09y0oj113usodm102ks0g1de6gjj].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.09y0oj113usodm102ks0g1de6gjj].[tyr:date_j:qk]</field>
            <field>[federated.09y0oj113usodm102ks0g1de6gjj].[yr:day_j:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8304D628-C3D7-4DB9-ADF9-448FA65D0498}' />
    </window>
    <window class='worksheet' name='Telsa -sentiment vs Close Value (2)'>
      <cards>
        <edge name='left'>
          <strip size='240'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='45'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='355'>
            <card pane-specification-id='1' param='[federated.09y0oj113usodm102ks0g1de6gjj].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.09y0oj113usodm102ks0g1de6gjj].[none:ticker_symbol:nk]</field>
            <field>[federated.09y0oj113usodm102ks0g1de6gjj].[tyr:date_j:qk]</field>
            <field>[federated.09y0oj113usodm102ks0g1de6gjj].[yr:day_j:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{367AB94D-BFD8-4284-8C64-2EE1DCC84530}' />
    </window>
    <window class='worksheet' name='Apple -sentiment vs Close Value (3)'>
      <cards>
        <edge name='left'>
          <strip size='240'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='45'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='276'>
            <card pane-specification-id='1' param='[federated.09y0oj113usodm102ks0g1de6gjj].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.09y0oj113usodm102ks0g1de6gjj].[none:ticker_symbol:nk]</field>
            <field>[federated.09y0oj113usodm102ks0g1de6gjj].[tyr:date_j:qk]</field>
            <field>[federated.09y0oj113usodm102ks0g1de6gjj].[yr:day_j:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7E689074-014F-47EE-8DAD-2A3B2B5A4FFA}' />
    </window>
    <window class='worksheet' name='mft -sentiment vs Close Value (4)'>
      <cards>
        <edge name='left'>
          <strip size='240'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='45'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='276'>
            <card pane-specification-id='1' param='[federated.09y0oj113usodm102ks0g1de6gjj].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.09y0oj113usodm102ks0g1de6gjj].[none:ticker_symbol:nk]</field>
            <field>[federated.09y0oj113usodm102ks0g1de6gjj].[tyr:date_j:qk]</field>
            <field>[federated.09y0oj113usodm102ks0g1de6gjj].[yr:day_j:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7661D8F0-6962-47B8-8362-6ABCA19277EC}' />
    </window>
    <window class='worksheet' name='-sentiment vs Close Value (2)'>
      <cards>
        <edge name='left'>
          <strip size='240'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='45'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='276'>
            <card pane-specification-id='1' param='[federated.09y0oj113usodm102ks0g1de6gjj].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.09y0oj113usodm102ks0g1de6gjj].[:Measure Names]</field>
            <field>[federated.09y0oj113usodm102ks0g1de6gjj].[tyr:date_j:qk]</field>
            <field>[federated.09y0oj113usodm102ks0g1de6gjj].[yr:day_j:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FEA33065-267D-49F4-9E65-BD8A23B5D480}' />
    </window>
    <window class='worksheet' name='Total Sentiment - Stock'>
      <cards>
        <edge name='left'>
          <strip size='240'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='48'>
            <card type='columns' />
          </strip>
          <strip size='48'>
            <card type='rows' />
          </strip>
          <strip size='46'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.09y0oj113usodm102ks0g1de6gjj].[none:ticker_symbol:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0AE45A41-E3FF-4358-9E26-87ABC7AB9DA3}' />
    </window>
    <window class='worksheet' name='Retweet Distribution'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.09y0oj113usodm102ks0g1de6gjj].[none:Retweet Num (copy)_277252879539163136:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B6EE9ABB-F89B-4099-A0BB-6229E03B5BB6}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Daily Trade number'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Retweet Distribution'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Telsa -sentiment vs Close Value (2)'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Total Sentiment - Stock'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{BB53B3B3-EF29-4953-BF62-658FA0C5D401}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='+sentiment vs Close Value' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='-sentiment vs Close Value (2)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Apple -sentiment vs Close Value (3)' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='Daily Trade number -Tesla Oct Impact (2)' width='192'>
      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
      vE8IQFDY/H+ebx67SQYiyQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Daily Trade number -Tesla Oct Impact (3)' width='192'>
      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
      YfGVL0mjMAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Retweet Distribution' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Telsa -sentiment vs Close Value (2)' width='192'>
      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
      ee3/A0FfHkFQNj42AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Total Sentiment - Stock' width='192'>
      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
      BYQDaBoXGk8Rn1VI1HAdTsAxOkxUXCoA8QnxDDWOoObEX9UdWlVlqyD0E/QAmE1mVMCEhs+k
      YL30us8zRlV1A/nFEbR29OJyt5GSbMPrnnzsptvlIjw8CZPJhMlkutwaXbpCCD0FfRforlgL
      J9uGGO1pwBQ1Ewtemhqa0cxh3LOmjKT4WKIiw4mMiiImfQ4jjbWMezzUnO5gbnZysMsR4oaC
      3hdI83s5V3eMIW8kpYuLsFv8nDtznjn5uVguNcYa7W3DG5lOUpQF51AX1XWNzMwtImdmwuWH
      OUhfIKE3aYwlDE0aYwnDkwAIQ5MACEOTAAhDkwAIQ5MACEOTAAhDkwAIQ5MACEOTAAhDkwAI
      Q5MACEOTAAhDkwAIQ5MACEOTAAhDkwAIQ5MACEOTAAhDkwAIQ5MACEOTAAhDC3rPEU3TmHBe
      xKuaiI6OxHSpzw9o+LwenM4JNJOZ6KgozCaFCccYLu9kK8TImDhsZuWDFy5EkAU9AP3NJ6i5
      4CDaNI4tuZAlhbMmJ2gqzWdOctFnwu8aw2VL4Z4lBeyp2EZqZh4AWQULsYVLAEToBD0AdY2d
      lG34MOEmH2+/U4lWOIvJVdpE3oISFEXB7xphx946VG0W1ohMFi1aFOwyhAiILt2hw80KYL26
      O7Si4Bsf5eiRw3QNOFhy7wbMfo0w8wQVFbuYcKksL19DvN0s3aFFyISsOzSANSKW5WXrGO5p
      5VjtCdLKV7KqvBwAV+cJ3j3bzX2LM6U7tAiZoJ8Fmh1r5lT7MGO9jSiRk92hmxtb8Ho8tLQ0
      4/FDZHQ0frcbx2AHp5s78ft9NLd0kjojLtjlCHFDQW+Oq/o9nDtRzZAvgtLFRYRZVM6ebia3
      II/BzmYazneALYYFC+cTE2am6/w5Gtv7Sc0qIG92yuWzRtIcV+hNukMLQ5Pu0MLwJADC0CQA
      wtAkAMLQJADC0CQAwtAkAMLQJADC0CQAwtAkAMLQJADC0CQAwtAkAMLQJADC0CQAwtAkAMLQ
      JADC0CQAwtAkAMLQJADC0CQAwtAkAMLQJADC0ILedMfjHOZo9XFcfgvzS5YyIyZscoKm0t50
      mvOdA6iYyJ5bzOyUWDoaaqnvGCIycRZLF+Re0U5dCP0FfQtQd/gQs4qWs2pJHkerqq+aFjcj
      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
    </thumbnail>
    <thumbnail height='192' name='mft -sentiment vs Close Value (4)' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
